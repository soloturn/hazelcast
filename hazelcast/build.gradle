plugins {
  id("biz.aQute.bnd.builder") version "5.1.2"
}

dependencies {
    implementation("com.fasterxml.jackson.core:jackson-core")
    implementation("com.google.code.findbugs:annotations")
    implementation("javax.cache:cache-api")
    implementation("log4j:log4j:1.2.17")
    implementation("net.openhft:affinity:3.2.3")
    implementation("org.apache.logging.log4j:log4j-api:2.13.3")
    implementation("org.codehaus.groovy:groovy-all:2.1.8")
    implementation("org.jruby:jruby-complete:1.7.22")
    implementation("org.osgi:org.osgi.core:4.2.0")
    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("org.snakeyaml:snakeyaml-engine")
    testImplementation("com.atomikos:transactions-jdbc:3.9.3")
    testImplementation("javax.cache:cache-tests:1.1.1")
    testImplementation("javax.cache:cache-tests:1.1.1:tests")
    testImplementation("javax.inject:javax.inject:1")
    testImplementation("net.bytebuddy:byte-buddy")
    testImplementation("net.spy:spymemcached:2.12.3")
    testImplementation("nl.jqno.equalsverifier:equalsverifier")
    testImplementation("org.apache.commons:commons-lang3")
    testImplementation("org.apache.geronimo.specs:geronimo-jta_1.1_spec:1.1.1")
    testImplementation("org.apache.httpcomponents:httpclient:4.3.6")
    testImplementation("org.apache.logging.log4j:log4j-core:2.13.3")
    testImplementation("org.hamcrest:hamcrest-library:1.3")
    testImplementation("org.hdrhistogram:HdrHistogram:2.1.12")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.nanohttpd:nanohttpd:2.3.1")
    testImplementation("org.openjdk.jmh:jmh-core")
    testImplementation("org.ops4j.pax.exam:pax-exam-container-paxrunner:2.6.0")
    testImplementation("org.ops4j.pax.exam:pax-exam-junit4:2.6.0")
    testImplementation("org.ops4j.pax.exam:pax-exam-link-mvn:2.6.0")
    testImplementation("org.ops4j.pax.runner:pax-runner-no-jcl:1.8.6")
    testImplementation("org.powermock:powermock-api-mockito2")
    testImplementation("org.powermock:powermock-module-junit4")
    testImplementation("org.reflections:reflections")
    testImplementation("org.roaringbitmap:RoaringBitmap:0.8.11")
}

description = "hazelcast"

jar {
  bnd (
    "Bundle-Activator": "com.hazelcast.osgi.impl.Activator",
    "Bundle-Description": "Core Hazelcast Module",
    "Bundle-Vendor": "Hazelcast, Inc. ",
  )
}

tasks.register("testsJar", Jar) {
    archiveClassifier = "tests"
    from(sourceSets.test.output)
}

publishing.publications.maven.artifact(testsJar)
