plugins {
  id("biz.aQute.bnd.builder") version "5.1.2"
}

dependencies {
    implementation("com.fasterxml.jackson.core:jackson-core")
    implementation("com.google.code.findbugs:annotations")
    implementation("javax.cache:cache-api")
    implementation("log4j:log4j")
    implementation("net.openhft:affinity")
    implementation("org.apache.logging.log4j:log4j-api")
    implementation("org.codehaus.groovy:groovy-all")
    implementation("org.jruby:jruby-complete")
    implementation("org.osgi:org.osgi.core")
    implementation("org.slf4j:slf4j-api")
    implementation("org.snakeyaml:snakeyaml-engine")
    testImplementation("com.atomikos:transactions-jdbc:3.9.3")
    testImplementation("javax.cache:cache-tests:1.1.1")
    testImplementation("javax.cache:cache-tests:1.1.1:tests")
    testImplementation("javax.inject:javax.inject:1")
    testImplementation("net.bytebuddy:byte-buddy")
    testImplementation("net.spy:spymemcached")
    testImplementation("nl.jqno.equalsverifier:equalsverifier")
    testImplementation("org.apache.commons:commons-lang3")
    testImplementation("org.apache.geronimo.specs:geronimo-jta_1.1_spec")
    testImplementation("org.apache.httpcomponents:httpclient")
    testImplementation("org.apache.logging.log4j:log4j-core")
    testImplementation("org.hamcrest:hamcrest-library")
    testImplementation("org.hdrhistogram:HdrHistogram")
    testImplementation("org.mockito:mockito-core")
    testImplementation("org.nanohttpd:nanohttpd")
    testImplementation("org.openjdk.jmh:jmh-core")
    testImplementation("org.ops4j.pax.exam:pax-exam-container-paxrunner")
    testImplementation("org.ops4j.pax.exam:pax-exam-junit4")
    testImplementation("org.ops4j.pax.exam:pax-exam-link-mvn")
    testImplementation("org.ops4j.pax.runner:pax-runner-no-jcl")
    testImplementation("org.powermock:powermock-api-mockito2")
    testImplementation("org.powermock:powermock-module-junit4")
    testImplementation("org.reflections:reflections")
    testImplementation("org.roaringbitmap:RoaringBitmap")
}

description = "hazelcast"

jar {
  bnd (
    "Bundle-Activator": "com.hazelcast.osgi.impl.Activator",
    "Bundle-Description": "Core Hazelcast Module",
    "Bundle-Vendor": "Hazelcast, Inc. ",
  )
}

tasks.register("testsJar", Jar) {
    archiveClassifier = "tests"
    from(sourceSets.test.output)
}

publishing.publications.maven.artifact(testsJar)
